'''swea10580 전봇대
현우는 길을 가다가 전선들이 복잡하게 꼬여 있는 전봇대 두 개를 보았다. 
두 전봇대는 높이가 매우 높으며, N개의 팽팽한 전선으로 연결되어 있었다. 
두 전선이 끝점이 같은 경우는 없으나, 교차하는 경우는 있다. 

이를 그림으로 하면 아래와 같다. (전선 3개가 있으며, 교차점 2개가 검은색으로 칠해졌다.)
세 개 이상의 전선이 하나의 점에서 만나지 않는다고 가정하자. 
이 전봇대에는 총 몇 개의 교차점이 있을까?
'''
'''
교차점이 생기는 경우

새로운 선의 시작점 > 기존 선의 시작점 & 새로운 선의 도착점 < 기존 선의 도착점인 경우
새로운 선의 시작점 < 기존 선의 시작점 & 새로운 선의 도착점 > 기존 선의 도착점인 경우

하나의 새로운 선에서 여러 개의 교차점 발생 가능

-완전 탐색
>> 새로운 선이 들어올 때 마다 기존의 모든 전선들과 비교
N 개 N-1개  O N^2?

기존 전선 1개: 비교 1번 / 2개 비교2개 / 기존 전선 N-1개 비교 N-1개
N(N-1) / 2
N이 최악의 경우 1000이므로
최악의 경우 1000*999/2 = 500000 충분히 가능!
'''

T = int(input())

for tc in range(1, T+1):
    N = int(input())

    # N개의 새로운 선이 추가 (기존 선들과 비교)
    wires = []  #기존 선들을 저장할 리스트
    answer_count = 0    # 교차점 수

    for _ in range(N):
        start, end = map(int, input().split())

        #기존 선들과 비교
        for prev_start, prev_end in wires:
            # 1. 기존 전선보다 시작점 높고, 도착점 낮음
            if start > prev_start and end < prev_end:
                answer_count += 1
            # 2. 기존 전선보다 시작점 낮도, 도착점 낮음
            if start <  prev_start and end > prev_end:
                answer_count += 1

        #목록에 추가
        wires.append((start, end))
    print(f"#{tc} {answer_count}")