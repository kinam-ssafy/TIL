'''swea20551 증가하는 사탕 수열 

세현이는 세 개의 상자를 나란히 세워 놓았다. 
첫 번째 상자에는 사탕 A개, 두 번째 상자에는 사탕 B개, 
세 번째 상자에는 사탕 C개가 들어 있다.

세현이는 각 상자에 들어 있는 사탕의 개수가 순증가하기를 원한다. 
즉, 두 번째 상자에 들어 있는 사탕의 개수가 첫 번째 상자에 들어 있는 사탕의 개수보다 더 많기를 원하고, 
세 번째 상자에 들어 있는 사탕의 개수가 두 번째 상자에 들어 있는 사탕의 개수보다 더 많기를 원한다.

또한, 세현이는 모든 상자가 비어 있지 않기를 원한다. 
즉, 모든 상자에 1개 이상의 사탕이 들어 있기를 원한다.
세현이가 이 두 조건을 만족시키기 위해 할 수 있는 일은, 
상자 속에 들어 있는 사탕을 (0개 이상) 먹어 없애 버리는 것이다. 

세현이가 조건을 만족시킬 수 있는지 판단하고, 
만족시킬 수 있다면 최소 몇 개의 사탕을 먹어야 하는지 구하는 프로그램을 작성하라.'''

# 이중포문 구현 시 3000 * 3000 * 3
# 규칙 : B = C - 1, A = B - 1로 만들면 된다

# import sys
# sys.stdin = open("input20551.txt", "r")

T = int(input())

for tc in range(1, T+1):
    A, B, C = map(int, input().split())

    # 불가능한 케이스 먼저 지우기
    if A < 1 or B < 2 or C < 3:
        print(f"#{tc} -1")
        continue

    eat_count = 0   #몇 개 먹었는가?

    # B상자 = C상자 - 1 , B에서 C - 1이 될 때 까지 먹을 것
    if B >= C:
        eat_count += B - (C - 1)
        B = C - 1   

    # A상자 = B상자 - 1
    if A >= B:
        eat_count += A - (B - 1)
        A = B - 1


    print(f"#{tc} {eat_count}")