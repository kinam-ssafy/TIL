'''SWEA 2805
N X N크기의 농장이 있다.

이 농장에는 이상한 규칙이 있다.

규칙은 다음과 같다.


   ① 농장은 크기는 항상 홀수이다. (1 X 1, 3 X 3 … 49 X 49)

   ② 수확은 항상 농장의 크기에 딱 맞는 정사각형 마름모 형태로만 가능하다.

1 X 1크기의 농장에서 자라는 농작물을 수확하여 얻을 수 있는 수익은 3이다.

3 X 3크기의 농장에서 자라는 농작물을 수확하여 얻을 수 있는 수익은 16 (3 + 2 + 5 + 4 + 2)이다.

5 X 5크기의 농장에서 자라는 농작물의 수확하여 얻을 수 있는 수익은 25 (3 + 2 + 1 + 1 + 2 + 5 + 1 + 1 + 3 + 3 + 2 + 1)이다.

농장의 크기 N와 농작물의 가치가 주어질 때, 규칙에 따라 얻을 수 있는 수익은 얼마인지 구하여라.
'''
# 1. 홀수 N에 대한 정사각형 농장 입력을 받기
# 2. 가운데 인덱스를 기준점 삼기
# 3. 델타를 이용해 재귀함수 작성 >> 델타 못쓸듯 XX
# 3. 마름모꼴에 대하여 각 인덱스들은 수학적으로 (i + |y|, j + |x|)로 나타낼 수 있음
# 4. |x| + |y| = n , -n <= x, y <= n
# 5. 각 마름모에 대한 총 인덱스 수는 4n으로 나타낼 수 있음. 


T = int(input())
for t in range(1, T+1):
   N = int(input())
   arr = [list(map(int, input())) for _ in range(N)]
   '''n일때의 마름모 인덱스들의 합을 구함 
   모든 배열을 순회하고, 마름모의 범위 이내면 합 반환
   '''

   sum = 0

   #가운데 값
   center = N // 2
   #가운데 인덱스를 시작점으로
   for i in range(N):
      for j in range(N):
         if abs(center -i) + abs(center - j) <= center: # 인덱스의 범위가 마름모의 범위에 속하면 해당 인덱스에 할당된 수를 더함
            # 조건문은 |x| + |y| = n 이 식이 기하학적으로 마름모 자체를 말하고 있어서 이 정의를 조건식에 이용함
            sum += arr[i][j]

   #마름모인덱스들의 합
   print(f"#{t} {sum}")

'''
입력
1
5
14054
44250
02032
51204
52212
   
'''