'''boj1541 잃어버린 괄호
세준이는 양수와 +, -, 그리고 괄호를 가지고 식을 만들었다. 그리고 나서 세준이는 괄호를 모두 지웠다.

그리고 나서 세준이는 괄호를 적절히 쳐서 이 식의 값을 최소로 만들려고 한다.

괄호를 적절히 쳐서 이 식의 값을 최소로 만드는 프로그램을 작성하시오.

첫째 줄에 식이 주어진다. 식은 ‘0’~‘9’, ‘+’, 그리고 ‘-’만으로 이루어져 있고, 가장 처음과 마지막 문자는 숫자이다. 
그리고 연속해서 두 개 이상의 연산자가 나타나지 않고, 5자리보다 많이 연속되는 숫자는 없다. 수는 0으로 시작할 수 있다. 
입력으로 주어지는 식의 길이는 50보다 작거나 같다.'''

# 처음 부호 - 나오기 전 까진 다 더하고
# 첫 - 나온 이후로는 다 빼버림


# 예시) arr = '55+50+40-30-20+40-60+40-30+20'
arr = input().strip()

# '-'를 기준으로 문자열을 분리
# 예시 plus = ['55+50+40', '30', '20+40', '60+40', '30+20']
# '55+50+40' 이후로 첫 - 가 있을 것, 첫 - 이후 모든 숫자에 괄호 씌울 것이라 plus[0]부분만 다 더하고 이후 숫자들은 모두 빼주기
# 참고: split하면 자동으로 리스트로 저장됨
plus = arr.split('-')

# 첫 번째 부분 (-)이 나오기 전까지)은 모두 더하기
#예시) '55+50+40'을 ['55', '50', '40']으로 나누고 인트 취하고 다 더함
result = sum(int(x) for x in plus[0].split('+'))

# 나머지 부분들(- 이후)은 모두 빼기
for part in plus[1:]:
    # 각 부분 안에서 +로 연결된 수들을 모두 더한 후 전체에서 빼기
    result -= sum(int(x) for x in part.split('+'))

print(result)









## 아래 코드는 연속된 + 에 대한 최대합을 구해서 결과를 구했는데 -가 중간에 있어도 최대합이 나오는 반례가 있어서 폐기


# 입력받은 문자열을 숫자랑 부호로 나누기 ex) 55-50+40
# 식의 값을 최소로 만들기 ??
# - (n1 + n2)
# - (n3 + n4 + n5) 어느 것이 더 작은지 모름...
# +가 있으면 더해서 빈리스트에 넣고 맥스값 찾아서 괄호 씌워야 -부호 받고 크게 뺄 듯
# 일단 리스트에 있는 수를 부호대로 계산하기

# 55-50+40 = 45
# 55-(50+40) = -35 = 55 - 50 - 40 = (55-50+40) 
# result = n1 + n2 - (n3 + n4 + n5) - n6 + ... 더해서 가장 커지는 수 괄호
#        = n1 + n2 - n3 +   n4 +  n5 - n6 + ... 그냥 괄호없이 그대로 계산
#                       - 2*n4 -2*n5           2*(맥스값 - 괄호의 첫 수) 를 빼줘야함


# 경우 1: +만 있는 경우 : 대충 다 더함
# 경우 2: -만 있는 경우 : 
# 10 - 20 - 30 - 40 >> (10-20)-30-40 이 제일 작음 << 반례처리해야겠음

# arr = input() #'55-50+40'가 저장될 것

# number = [] #숫자를 담을 빈 리스트
# operator = [] #부호를 담을 빈 리스트
# value = '' #number에 넣을 숫자를 저장하기위한 변수 선언
# result = 0
# #문자열을 숫자와 부호로 나누기
# for i in arr:
#     if i in '+-': # 문자가 + -중 하나라면
#         number.append(int(value)) #맨 처음에는 빈 문자열이라 괜찮. 이후로는 숫자 넣음
#         operator.append(i) # 부호를 담을 리스트에 부호 추가
#         value = '' #value를 추가하고 난 뒤 초기화

#     else: #i가 숫자면?
#         value += i # '123'이면 '1' + '2' + '3' 이어서 '123'

# number.append(int(value)) # 문자열의 마지막에는 부호가 없으므로 for문이 끝난 후 마지막 숫자를 append해야함

# if '-' not in operator: # -부호 없고 +부호만 있으면
#     result = sum(number)

# elif '+' not in operator: # + 부호 없고 - 부호만 있으면?
#     result = -(sum(number)) + (2 * number[0]) # n1 - n2 - n3 - n4 ... = -(n1 + n2 + n3 ...) + 2 * n1

# else: #부호가 골고루 있다면
#     result = number[0]
#     max_sum = number[0]
#     sum = number[0]
#     idx = 0 #괄호의 첫 수가 어딨는지 확인위한 인덱스
#     final_idx = 0
#     # 일단 부호대로 계산해서 result를 만들기
#     for n in range(1, len(number)):
#         if operator[n-1] == '+':
#             result += number[n] # +면 더함 
#             sum += number[n] #연속으로 더해서 가장 큰 수
#             if max_sum < sum: #갱신
#                 max_sum = sum
#                 final_idx = idx
        
#         elif operator[n-1] == '-':
#             result -= number[n]
#             sum = number[n] # sum 갱신
#             idx = n


#     result = result - 2*(max_sum - number[final_idx])

# print(result)
        







